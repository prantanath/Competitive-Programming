{
	// Place your C++ workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Segment Tree": {
		"prefix": "segtree",
		"body": [
		  "const long long N = 2e5+10;",
		  "vector<long long>A(N),tree(4*N);",
		  "//build tree",
		  "void build(ll node ,ll st , ll en){",
		  "    if (st==en) tree[node]=A[st];",
		  "    else{",
		  "        ll mid = (st+en)/2;",
		  "        build(2*node,st,mid);",
		  "        build(2*node+1,mid+1,en);",
		  "        tree[node] = tree[2*node]+tree[2*node+1];",
		  "    }",
		  "}",
		  "",
		  "//query",
		  "ll query(ll node, ll st, ll en, ll l, ll r){",
		  "    if (st>r || l>en) return 0;",
		  "    if(l<=st and en<=r) return tree[node];",
		  "    ll mid = (st+en)/2;",
		  "    ll q1 = query(2*node,st,mid,l,r);",
		  "    ll q2 = query(2*node+1,mid+1,en,l,r);",
		  "    return q1+q2;",
		  "}",
		  "//update",
		  "void update(ll node,ll st,ll en,ll idx,ll val){",
		  "    if(st==en){",
		  "        A[st]=val;",
		  "        tree[node]=val;",
		  "    }",
		  "    else{",
		  "        ll mid = (st+en)/2;",
		  "        if(idx<=mid){",
		  "            update(2*node,st,mid,idx,val);",
		  "        }",
		  "        else{",
		  "            update(2*node+1,mid+1,en,idx,val);",
		  "        }",
		  "        tree[node] = tree[2*node]+tree[2*node+1];",
		  "    }",
		  "}"
		],
		"description": "Segment Tree"
	  }
	}